const fs = require('fs');
const actions = require('../actions/actions');
const store = require('../store/store');
const arrayFi = [];
const pathFinder = require('path');
const xml2js = require('xml2js');

const datedExport = path => {
  return pathFinder
    .dirname(path)
    .split('\\')[1]
    .split('_')[0];
};

const id = path => {
  return pathFinder
    .dirname(path)
    .split('\\')[2]
    .split('_')[0];
};

const readXml = path => {
  console.log('readXml');
  return new Promise((resolve, reject) => {
    fs.readFile(path, (err, data) => {
      if (err) reject(err);
      resolve(data);
    });
  });
};

const convertXml = data => {
  console.log('convertXml');
  new xml2js.Parser().parseString(data, (err, result) => {
    if (err) throw err;
    return result;
  });
};

const extractXml = path => {
  console.log('extractXml');
  return new Promise((resolve, reject) => {
    readXml(path)
      .then(valueRead => {
        console.log(valueRead);
        convertXml(valueRead)
          .then(valueData => {
            console.log(valueData);
            resolve(valueData);
          })
          .catch(err => {});
      })
      .catch(err => {});
  });
};

const XML_TO_JSON = path => {
  console.log('XML_TO_JSON');
  Promise.all([datedExport(path), id(path), extractXml(path)])
    .then(val => {
      console.log(val[0]);
      console.log(val[1]);
      console.log(val[2]);
      store.EXTRACT_DATA(val[0], val[1], val[2]);
    })
    .catch(err => {
      console.log(err);
    });

  // fs.readFile(path, (err, data) => {
  //   new xml2js.Parser().parseString(data, (err, result) => {
  //     if (err) throw err;
  //     store.EXTRACT_DATA(datedExport(path), id(path), result);
  //   });
  // });
};

module.exports = {
  XML_TO_JSON: XML_TO_JSON
};
